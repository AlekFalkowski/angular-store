@import "all-config";

fields-column {
    padding-inline-start: 8px;
    padding-inline-end: 24px;
    padding-block: 8px;
    //
    display: flex;
    flex-direction: column;
    // display: grid; // For automatic scrolling to input on Tab...
    // grid-template-columns: auto;
    user-select: none;

    // field
    & > label {
        contain: layout paint;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        height: 40px;
        margin: 4px;
    }
    & > label:has(>input:not(:disabled)) {
        color: var(--md-sys-color-on-surface);
        cursor: pointer;
    }
    & > label:has(>input:not(:disabled):checked) {
        //background-color: var(--md-sys-color-secondary-container);
        //color: var(--md-sys-color-on-secondary-container);
    }
    & > label:has(>input:disabled) {
        color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38)
    }

    // field overlay
    & > label::before {
        content: "";
        position: absolute;
        inset-inline-start: 0;
        top: 0;
        width: 40px;
        height: 40px;
        border-radius: 20px;
        opacity: 0;
        transition: opacity 150ms;
    }
    & > label:has(>input:not(:checked))::before {
        background-color: var(--md-sys-color-on-surface);
    }
    & > label:has(>input:checked)::before {
        background-color: var(--md-sys-color-primary);
    }
    & > label:hover:has(>input:not(:disabled))::before {
        @include ONLY_FOR_HOVERING_POINTER {
            opacity: 0.08;
        }
    }
    & > label:has(>input:focus-visible)::before {
        opacity: 0.12;
    }
    & > label:active:has(>input:not(:disabled))::before {
        opacity: 0.12;
    }
    & > label:active:has(>input:not(:disabled):not(:checked))::before {
        //background-color: var(--md-sys-color-primary);
    }
    & > label:active:has(>input:not(:disabled):checked)::before {
        //background-color: var(--md-sys-color-on-surface);
    }

    // input-tag (visually-hidden)
    & > label > input {
        contain: layout paint size;
        appearance: none;
        opacity: 0;
        margin: 0;
    }

    // checkbox or radio box
    & > label::after {
        z-index: 1;
        position: absolute;
        inset-inline-start: 10px;
        top: 10px;
        width: 20px;
        height: 20px;
        font-size: 24px;
        line-height: 20px;
        text-indent: -2px;
        font-family: "Material Symbols Outlined";
    }
    & > label:has(>input:not(:disabled))::after {
        color: var(--md-sys-color-on-surface-variant);
    }
    & > label:has(>input:focus-visible)::after {
        color: var(--md-sys-color-on-surface);
    }
    & > label:hover:has(>input:not(:disabled))::after {
        @media ONLY_FOR_HOVERING_POINTER {
            color: var(--md-sys-color-on-surface);
        }
    }
    & > label:has(>input:not(:disabled):checked)::after {
        color: var(--md-sys-color-primary);
    }
    & > label:has(>input[type="checkbox"])::after {
        content: "check_box_outline_blank";
        content: "check_box_outline_blank" / "";
        font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;
    }
    & > label:has(>input[type="checkbox"]:checked)::after {
        content: "check_box";
        content: "check_box" / "";
    }
    & > label:has(>input[type="radio"])::after {
        content: "radio_button_unchecked";
        content: "radio_button_unchecked" / "";
        font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
    }
    & > label:has(>input[type="radio"]:checked)::after {
        content: "radio_button_checked";
        content: "radio_button_checked" / "";
    }

    // field label
    & > label > span {
        order: 2;
        contain: layout paint;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        @include MD3_LABEL_L_FONT_RULE_SET;
        margin-inline-start: 60px;
    }
}
