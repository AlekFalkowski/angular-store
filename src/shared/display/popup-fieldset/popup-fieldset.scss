@import "all-config";

$toggleTransitionDuration: 200ms; // RELATED VALUES in JS: toggleTransitionDuration

popup-fieldset {
    margin: 8px 4px;
    max-width: 100%;
    --tdm: 1;

    // BUTTON
    & > [data-e="button"] {
        contain: layout;
        appearance: none;
        position: relative;
        display: flex;
        gap: 4px;
        align-items: center;
        width: 100%;
        height: 56px;
        padding-top: 8px;
        padding-bottom: 8px;
        user-select: none;
        transition-property: border-color, box-shadow;
        transition-duration: calc($toggleTransitionDuration * var(--tdm));

        & > [data-e="overlay"] {
            content: "";
            contain: layout paint size;
            position: absolute;
            background-color: var(--md-sys-color-on-surface);
            opacity: 0;
            transition: opacity 150ms;
        }

        & > [data-e="input"] {
            position: relative;
            margin-inline-end: auto;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            color: var(--md-sys-color-on-surface);
            @include MD3_BODY_L_FONT_RULE_SET;
        }

        & > [data-e="label"] {
            position: absolute;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            color: var(--md-sys-color-on-surface-variant);
            @include MD3_BODY_L_FONT_RULE_SET;
            transition-property: font-size, line-height, color;
            transition-duration: calc($toggleTransitionDuration * var(--tdm));
        }

        & > [data-e="count"] {
            overflow-wrap: normal;
            //color: var(--md-sys-color-on-surface-variant);
            color: var(--md-sys-color-primary);
            @include MD3_BODY_M_FONT_RULE_SET;
        }

        & > [data-e="icon"] {
            flex-shrink: 0;
            color: var(--md-sys-color-on-surface-variant);
            transition-property: transform;
            transition-duration: calc($toggleTransitionDuration * var(--tdm));
        }
    }
    &.framed > [data-e="button"] {
        padding-inline-start: 15px;
        padding-inline-end: 11px;
        border-radius: var(--md-sys-shape-corner-extra-small);
        border-inline: 1px solid var(--md-sys-color-outline);
        border-top: 1px solid var(--md-sys-color-outline);
        border-bottom: 1px solid var(--md-sys-color-outline);
        // background-color: transparent;
        background-color: var(--md-sys-color-surface);

        & > [data-e="overlay"] {
            inset: -1px;
            border-radius: var(--md-sys-shape-corner-extra-small);
        }

        & > [data-e="label"] {
            top: -8px;
            inset-inline-start: -1px;
            display: flex;
            width: calc(100% + 2px);
            max-height: 100%;
            line-height: 70px;

            &::before,
            &::after {
                content: "";
                display: block;
                margin-top: 7px;
                border-top: 1px solid transparent;
                min-width: 12px;
                height: 8px;
                pointer-events: none;
                box-shadow: inset transparent 0 1px;
                transition-property: border-color, box-shadow;
                transition-duration: calc($toggleTransitionDuration * var(--tdm));
            }

            &::before {
                margin-inline-end: 4px;
                border-inline-start: 1px solid transparent;
                border-start-start-radius: var(--md-sys-shape-corner-extra-small);
            }

            &::after {
                margin-inline-start: 4px;
                border-inline-end: 1px solid transparent;
                border-start-end-radius: var(--md-sys-shape-corner-extra-small);
                width: 100%;
            }
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))):not(.error):not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-inline-color: var(--md-sys-color-on-surface);
            border-bottom-color: var(--md-sys-color-on-surface);
            border-top-color: var(--md-sys-color-on-surface);
            > [data-e="label"] {
                color: var(--md-sys-color-on-surface);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-surface);
            }
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))):not(.error).checked {
        border-top-color: transparent;
        > [data-e="label"] {
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-outline);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))):not(.error).checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-inline-color: var(--md-sys-color-on-surface);
            border-bottom-color: var(--md-sys-color-on-surface);
            > [data-e="label"] {
                color: var(--md-sys-color-on-surface);
            }
            > [data-e="label"]::before, > [data-e="label"]::after {
                border-top-color: var(--md-sys-color-on-surface);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-surface);
            }
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error:not(.checked) {
        border-inline-color: var(--md-sys-color-error);
        border-bottom-color: var(--md-sys-color-error);
        border-top-color: var(--md-sys-color-error);
        > [data-e="label"] {
            color: var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error:not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-inline-color: var(--md-sys-color-on-error-container);
            border-bottom-color: var(--md-sys-color-on-error-container);
            border-top-color: var(--md-sys-color-on-error-container);
            > [data-e="label"] {
                color: var(--md-sys-color-on-error-container);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-error-container);
            }
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error.checked {
        border-inline-color: var(--md-sys-color-error);
        border-bottom-color: var(--md-sys-color-error);
        border-top-color: transparent;
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error.checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-inline-color: var(--md-sys-color-on-error-container);
            border-bottom-color: var(--md-sys-color-on-error-container);
            > [data-e="label"] {
                color: var(--md-sys-color-on-error-container);
            }
            > [data-e="label"]::before, > [data-e="label"]::after {
                border-top-color: var(--md-sys-color-on-error-container);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-error-container);
            }
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible:not(.error):not(.checked) {
        outline: none;
        border-inline-color: var(--md-sys-color-primary);
        border-bottom-color: var(--md-sys-color-primary);
        border-top-color: var(--md-sys-color-primary);
        box-shadow: inset 1px 0 var(--md-sys-color-primary), inset -1px 0 var(--md-sys-color-primary), inset 0 -1px var(--md-sys-color-primary), inset 0 1px var(--md-sys-color-primary);
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible:not(.error):not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible:not(.error).checked {
        outline: none;
        border-inline-color: var(--md-sys-color-primary);
        border-bottom-color: var(--md-sys-color-primary);
        border-top-color: transparent;
        box-shadow: inset 1px 0 var(--md-sys-color-primary), inset -1px 0 var(--md-sys-color-primary), inset 0 -1px var(--md-sys-color-primary);
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-primary);
            box-shadow: inset 0 1px var(--md-sys-color-primary);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible:not(.error).checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible.error:not(.checked) {
        outline: none;
        border-inline-color: var(--md-sys-color-error);
        border-bottom-color: var(--md-sys-color-error);
        border-top-color: var(--md-sys-color-error);
        box-shadow: inset 1px 0 var(--md-sys-color-error), inset -1px 0 var(--md-sys-color-error), inset 0 -1px var(--md-sys-color-error), inset 0 1px var(--md-sys-color-error);
        > [data-e="label"] {
            color: var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible.error:not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible.error.checked {
        outline: none;
        border-inline-color: var(--md-sys-color-error);
        border-bottom-color: var(--md-sys-color-error);
        border-top-color: transparent;
        box-shadow: inset 1px 0 var(--md-sys-color-error), inset -1px 0 var(--md-sys-color-error), inset 0 -1px var(--md-sys-color-error);
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-error);
            box-shadow: inset 0 1px var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):focus-visible.error.checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error):not(.checked) {
        border-inline-color: var(--md-sys-color-primary);
        border-bottom-color: var(--md-sys-color-primary);
        border-top-color: transparent;
        box-shadow: inset 1px 0 var(--md-sys-color-primary), inset -1px 0 var(--md-sys-color-primary), inset 0 -1px var(--md-sys-color-primary);
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-primary);
            box-shadow: inset 0 1px var(--md-sys-color-primary);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
            transform: scaleY(-1);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error):not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error).checked {
        border-inline-color: var(--md-sys-color-primary);
        border-bottom-color: var(--md-sys-color-primary);
        border-top-color: transparent;
        box-shadow: inset 1px 0 var(--md-sys-color-primary), inset -1px 0 var(--md-sys-color-primary), inset 0 -1px var(--md-sys-color-primary);
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-primary);
            box-shadow: inset 0 1px var(--md-sys-color-primary);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
            transform: scaleY(-1);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error).checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error:not(.checked) {
        border-inline-color: var(--md-sys-color-error);
        border-bottom-color: var(--md-sys-color-error);
        border-top-color: transparent;
        box-shadow: inset 1px 0 var(--md-sys-color-error), inset -1px 0 var(--md-sys-color-error), inset 0 -1px var(--md-sys-color-error);
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-error);
            box-shadow: inset 0 1px var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
            transform: scaleY(-1);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error:not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error.checked {
        border-inline-color: var(--md-sys-color-error);
        border-bottom-color: var(--md-sys-color-error);
        border-top-color: transparent;
        box-shadow: inset 1px 0 var(--md-sys-color-error), inset -1px 0 var(--md-sys-color-error), inset 0 -1px var(--md-sys-color-error);
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: var(--md-sys-color-error);
            box-shadow: inset 0 1px var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
            transform: scaleY(-1);
        }
    }
    &.framed > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error.checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.framed > [data-e="button"]:disabled:not(.checked) {
        border-inline-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        border-bottom-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        border-top-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        > [data-e="label"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="input"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="count"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="icon"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
    }
    &.framed > [data-e="button"]:disabled.checked {
        border-inline-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        border-bottom-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        border-top-color: transparent;
        > [data-e="label"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="label"]::before, > [data-e="label"]::after {
            border-top-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="input"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="count"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="icon"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
    }
    &.tonal > [data-e="button"] {
        padding-inline-start: 16px;
        padding-inline-end: 12px;
        border-radius: var(--md-sys-shape-corner-extra-small) var(--md-sys-shape-corner-extra-small) 0 0;
        border-inline: none;
        border-top: none;
        border-bottom: 1px solid var(--md-sys-color-on-surface-variant);
        background-color: var(--md-sys-color-surface-variant);

        &::after {
            content: "";
            position: absolute;
            inset-inline-start: 0;
            bottom: -1px;
            display: block;
            width: 100%;
            height: 2px;
            background-color: var(--md-sys-color-surface-variant);
            transform-origin: center bottom;
            transform: scaleX(0);
            transition-property: transform;
            transition-duration: calc($toggleTransitionDuration * var(--tdm));
        }

        & > [data-e="overlay"] {
            inset: 0;
            border-radius: var(--md-sys-shape-corner-extra-small) var(--md-sys-shape-corner-extra-small) 0 0;
        }

        & > [data-e="input"] {
            top: 0.5em;
        }

        & > [data-e="label"] {
            top: 8px;
            line-height: 38px;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))):not(.error):not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-bottom-color: var(--md-sys-color-on-surface);
            > [data-e="overlay"] {
                opacity: 0.04;
            }
            > [data-e="label"] {
                color: var(--md-sys-color-on-surface);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-surface);
            }
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))):not(.error).checked {
        > [data-e="label"] {
            @include MD3_BODY_S_FONT_RULE_SET;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))):not(.error).checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-bottom-color: var(--md-sys-color-on-surface);
            > [data-e="overlay"] {
                opacity: 0.04;
            }
            > [data-e="label"] {
                color: var(--md-sys-color-on-surface);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-surface);
            }
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error:not(.checked) {
        border-bottom-color: var(--md-sys-color-error);
        &::after {
            background-color: var(--md-sys-color-error);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error:not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-bottom-color: var(--md-sys-color-on-error-container);
            &::after {
                background-color: var(--md-sys-color-on-error-container);
            }
            > [data-e="overlay"] {
                opacity: 0.04;
            }
            > [data-e="label"] {
                color: var(--md-sys-color-on-error-container);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-error-container);
            }
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error.checked {
        border-bottom-color: var(--md-sys-color-error);
        &::after {
            background-color: var(--md-sys-color-error);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):not(:focus-visible):not(:has(+:popover-open:not(.is-closing))).error.checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
            border-bottom-color: var(--md-sys-color-on-error-container);
            &::after {
                background-color: var(--md-sys-color-on-error-container);
            }
            > [data-e="overlay"] {
                opacity: 0.04;
            }
            > [data-e="label"] {
                color: var(--md-sys-color-on-error-container);
            }
            > [data-e="icon"] {
                color: var(--md-sys-color-on-error-container);
            }
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible:not(.error):not(.checked) {
        outline: none;
        border-bottom-color: var(--md-sys-color-primary);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-primary);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible:not(.error):not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible:not(.error).checked {
        outline: none;
        border-bottom-color: var(--md-sys-color-primary);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-primary);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible:not(.error).checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible.error:not(.checked) {
        outline: none;
        border-bottom-color: var(--md-sys-color-error);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-error);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-error);
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible.error:not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible.error.checked {
        outline: none;
        border-bottom-color: var(--md-sys-color-error);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-error);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):focus-visible.error.checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error):not(.checked) {
        border-bottom-color: var(--md-sys-color-primary);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-primary);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
            transform: scaleY(-1);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error):not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error).checked {
        border-bottom-color: var(--md-sys-color-primary);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-primary);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-primary);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-primary);
            transform: scaleY(-1);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)):not(.error).checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error:not(.checked) {
        border-bottom-color: var(--md-sys-color-error);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-error);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
            transform: scaleY(-1);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error:not(.checked):hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error.checked {
        border-bottom-color: var(--md-sys-color-error);
        &::after {
            transform: scaleX(100%);
            background-color: var(--md-sys-color-error);
        }
        > [data-e="label"] {
            color: var(--md-sys-color-error);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="icon"] {
            color: var(--md-sys-color-error);
            transform: scaleY(-1);
        }
    }
    &.tonal > [data-e="button"]:not(:disabled):has(+:popover-open:not(.is-closing)).error.checked:hover {
        @include ONLY_FOR_HOVERING_POINTER {
            cursor: pointer;
        }
    }
    &.tonal > [data-e="button"]:disabled:not(.checked) {
        border-bottom-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        > [data-e="label"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="input"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="count"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="icon"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
    }
    &.tonal > [data-e="button"]:disabled.checked {
        border-bottom-color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        > [data-e="label"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
            @include MD3_BODY_S_FONT_RULE_SET;
        }
        > [data-e="input"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="count"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
        > [data-e="icon"] {
            color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
        }
    }

    // HELP TEXT
    & > [data-e="help-text"] {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        min-height: 16px;
        margin: 4px 16px 0;
        @include MD3_BODY_S_FONT_RULE_SET;
    }
    & > [data-e="button"]:not(:disabled):not(.error) + [data-e="help-text"] {
        color: var(--md-sys-color-on-surface-variant);
    }
    & > [data-e="button"]:not(:disabled).error + [data-e="help-text"] {
        color: var(--md-sys-color-error);
    }
    & > [data-e="button"]:disabled + [data-e="help-text"] {
        color: rgb(var(--md-sys-color-on-surface-rgb) / 0.38);
    }

    // // <<< START Solution for browsers supporting css @starting-style.
    // // Experimental technology that only works in Chrome.
    // // After starting to use it is necessary replace +:popover-open:not(.is-closing) to +:popover-open in this file.
    // // POPUP WINDOW
    // & > [data-e="popup"] {
    //     contain: layout paint;
    //     max-width: min(560px, calc(100vw - var(--side-padding) * 2));
    //     max-height: 90svh;
    //     position: fixed;
    //     overscroll-behavior: contain;
    //     flex-direction: column;
    //     margin: 0;
    //     padding: 0;
    //     border: none;
    //     border-radius: var(--md-sys-shape-corner-extra-small);
    //     box-shadow: var(--md-sys-elevation-2);
    //     background-color: var(--md-sys-color-surface);
    //     transition: opacity 0.7s ease-out, transform 0.7s ease-out, overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;
    //     opacity: 0;
    //     transform: scale(0.7);
    // }
    // & > [data-e="popup"]:popover-open,
    // & > [data-e="popup"]:modal {
    //     @starting-style {
    //         opacity: 0;
    //         transform: scale(0.7);
    //     }
    //     opacity: 1;
    //     transform: scale(1);
    // }
    // &.tonal > [data-e="popup"] {
    //     background-color: var(--md-sys-color-surface-high);
    // }
    //
    // // POPUP BACKDROP
    // & > [data-e="popup"]::backdrop {
    //     transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete, background-color 0.7s;
    //     background-color: rgb(0 0 0 / 0%);
    // }
    // & > [data-e="popup"]:popover-open::backdrop,
    // & > [data-e="popup"]:modal::backdrop {
    //     @starting-style {
    //         background-color: rgb(0 0 0 / 0%);
    //     }
    //     background-color: rgb(0 0 0 / 50%);
    // }
    // // >>> END Solution for browsers supporting css @starting-style.

    // <<< START Temporary solution until Safari supports css @starting-style.
    // POPUP WINDOW
    & > [data-e="popup"] {
        contain: layout paint;
        max-width: min(560px, calc(100vw - var(--side-padding) * 2));
        max-height: 90svh;
        position: fixed;
        overscroll-behavior: contain;
        flex-direction: column;
        margin: 0;
        padding: 0;
        border: none;
        border-radius: var(--md-sys-shape-corner-extra-small);
        box-shadow: var(--md-sys-elevation-2);
        background-color: var(--md-sys-color-surface);
        opacity: 0;
    }
    &.tonal > [data-e="popup"] {
        background-color: var(--md-sys-color-surface-high);
    }
    // >>> END Temporary solution until Safari supports css @starting-style.
}
